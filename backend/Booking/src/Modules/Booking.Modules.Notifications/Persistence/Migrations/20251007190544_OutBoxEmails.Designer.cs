// <auto-generated />
using System;
using Booking.Modules.Notifications.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Booking.Modules.Notifications.Persistence.Migrations
{
    [DbContext(typeof(NotificationsDbContext))]
    [Migration("20251007190544_OutBoxEmails")]
    partial class OutBoxEmails
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("notifications")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Booking.Modules.Notifications.Domain.Entities.NotificationOutbox", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Attempts")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0)
                        .HasColumnName("attempts");

                    b.Property<string>("Channel")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("channel");

                    b.Property<string>("CorrelationId")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("correlation_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("created_by");

                    b.Property<bool>("IsRemoved")
                        .HasColumnType("boolean")
                        .HasColumnName("is_removed");

                    b.Property<DateTime?>("LastAttemptAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("last_attempt_at");

                    b.Property<string>("LastError")
                        .HasColumnType("text")
                        .HasColumnName("last_error");

                    b.Property<int>("MaxAttempts")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(3)
                        .HasColumnName("max_attempts");

                    b.Property<string>("NotificationReference")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("notification_reference");

                    b.Property<string>("Payload")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("payload");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("priority");

                    b.Property<string>("ProviderMessageId")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("provider_message_id");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasColumnName("recipient");

                    b.Property<int?>("RecipientUserId")
                        .HasColumnType("integer")
                        .HasColumnName("recipient_user_id");

                    b.Property<DateTime?>("ScheduledAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("scheduled_at");

                    b.Property<DateTime?>("SentAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("sent_at");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("status");

                    b.Property<string>("Subject")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("subject");

                    b.Property<string>("TemplateName")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("template_name");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at");

                    b.HasKey("Id")
                        .HasName("pk_notification_outbox");

                    b.HasIndex("CorrelationId")
                        .HasDatabaseName("ix_notification_outbox_correlation_id");

                    b.HasIndex("CreatedAt")
                        .HasDatabaseName("ix_notification_outbox_created_at");

                    b.HasIndex("NotificationReference")
                        .IsUnique()
                        .HasDatabaseName("ix_notification_outbox_reference")
                        .HasFilter("notification_reference IS NOT NULL");

                    b.HasIndex("Recipient")
                        .HasDatabaseName("ix_notification_outbox_recipient");

                    b.HasIndex("Status", "ScheduledAt")
                        .HasDatabaseName("ix_notification_outbox_status_scheduled");

                    b.HasIndex("Status", "Attempts", "MaxAttempts")
                        .HasDatabaseName("ix_notification_outbox_retry_candidates");

                    b.ToTable("notification_outbox", "notifications");
                });
#pragma warning restore 612, 618
        }
    }
}
